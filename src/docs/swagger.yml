openapi: 3.0.3
info:
  title: Library Management System
  version: 1.0.0
servers:
  - url: http://localhost:3000/api

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - name
        - email
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_login:
          type: string
          format: date-time
    AppError:
      type: object
      properties:
        status:
          type: string
          enum:
            - error
            - fail
        statusCode:
          type: integer
        message:
          type: string
        details:
          type: object
          additionalProperties: true
          description: Additional error context
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AppError"
          example:
            status: error
            statusCode: 400
            message: Invalid input data
            details:
              field: email
              reason: Invalid email format
    Unauthorized:
      description: Unauthorized Access
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AppError"
          example:
            status: error
            statusCode: 401
            message: Authentication failed
            details:
              reason: Invalid credentails
    ForbiddenError:
      description: Forbidden - Insufficient permissions
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AppError"
          example:
            status: error
            statusCode: 403
            message: Forbidden Access
            details:
              reason: You do not have permission to access this resource.
    NotFoundError:
      description: Resource Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AppError"
          example:
            status: error
            statusCode: 404
            message: Resource Not Found
security:
  - BearerAuth: []

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: User sign up
      description: Add new user to the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - phone
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                phone:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "User created successfully"
                  user:
                    $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/BadRequest"
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  default: ta7a@gmail.com
                password:
                  type: string
                  format: password
                  default: 123456
      responses:
        "200":
          description: successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  token:
                    type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
